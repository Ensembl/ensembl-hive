<?xml version='1.0' standalone='yes'?>
<pipeline>
  <pipeline_analyses>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <target>copy_table_factory</target>
            </flow>
            <flow>
              <target>innodbise_table_factory</target>
            </flow>
          </dependent>
          <target>backbone_fire_species_list_prepare</target>
        </flow>
      </flow_rules>
      <logic_name>backbone_fire_db_prepare</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::Dummy</module>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <target>prepare_species_sets</target>
            </flow>
          </dependent>
          <target>backbone_fire_genome_load</target>
        </flow>
      </flow_rules>
      <logic_name>backbone_fire_species_list_prepare</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::Dummy</module>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <target>genome_reuse_factory</target>
            </flow>
          </dependent>
          <target>backbone_fire_allvsallblast</target>
        </flow>
      </flow_rules>
      <logic_name>backbone_fire_genome_load</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::DatabaseDumper</module>
      <parameters>
        <param>
          <param_name>table_list</param_name>
          <param_value></param_value>
        </param>
        <param>
          <param_name>filename</param_name>
          <param_value>snapshot_1_before_genome_load.sql</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <target>paf_reuse_factory</target>
            </flow>
          </dependent>
          <target>backbone_fire_hcluster</target>
        </flow>
      </flow_rules>
      <logic_name>backbone_fire_allvsallblast</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::DatabaseDumper</module>
      <parameters>
        <param>
          <param_name>table_list</param_name>
          <param_value></param_value>
        </param>
        <param>
          <param_name>filename</param_name>
          <param_value>snapshot_2_before_allvsallblast.sql</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <target>hcluster_dump_factory</target>
            </flow>
          </dependent>
          <target>backbone_fire_tree_building</target>
        </flow>
      </flow_rules>
      <logic_name>backbone_fire_hcluster</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::DatabaseDumper</module>
      <parameters>
        <param>
          <param_name>table_list</param_name>
          <param_value>peptide_align_feature_%</param_value>
        </param>
        <param>
          <param_name>filename</param_name>
          <param_value>snapshot_3_before_hcluster.sql</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <target>cluster_factory</target>
            </flow>
          </dependent>
          <target>backbone_fire_dnds</target>
        </flow>
      </flow_rules>
      <logic_name>backbone_fire_tree_building</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::DatabaseDumper</module>
      <parameters>
        <param>
          <param_name>table_list</param_name>
          <param_value>peptide_align_feature_%</param_value>
        </param>
        <param>
          <param_name>filename</param_name>
          <param_value>snapshot_4_before_tree_building.sql</param_value>
        </param>
        <param>
          <param_name>exclude_list</param_name>
          <param_value>1</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <target>group_genomes_under_taxa</target>
            </flow>
          </dependent>
          <target>backbone_pipeline_finished</target>
        </flow>
      </flow_rules>
      <logic_name>backbone_fire_dnds</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::DatabaseDumper</module>
      <parameters>
        <param>
          <param_name>table_list</param_name>
          <param_value>peptide_align_feature_%</param_value>
        </param>
        <param>
          <param_name>filename</param_name>
          <param_value>snapshot_5_before_dnds.sql</param_value>
        </param>
        <param>
          <param_name>exclude_list</param_name>
          <param_value>1</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <logic_name>backbone_pipeline_finished</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::Dummy</module>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>copy_table</target>
        </flow>
      </flow_rules>
      <logic_name>copy_table_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::JobFactory</module>
      <parameters>
        <param>
          <param_name>db_conn</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>-user</hash_key>
                <hash_value>ensro</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-host</hash_key>
                <hash_value>compara1</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-dbname</hash_key>
                <hash_value>sf5_ensembl_compara_master</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-port</hash_key>
                <hash_value>3306</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-pass</hash_key>
                <hash_value></hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
        <param>
          <param_name>column_names</param_name>
          <param_value>
            <array>
              <array_item>table</array_item>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>inputlist</param_name>
          <param_value>
            <array>
              <array_item>ncbi_taxa_node</array_item>
              <array_item>ncbi_taxa_name</array_item>
              <array_item>method_link</array_item>
              <array_item>method_link_species_set</array_item>
              <array_item>species_set</array_item>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>input_id</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>src_db_conn</hash_key>
                <hash_value>#db_conn#</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>table</hash_key>
                <hash_value>#table#</hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>-1</hive_capacity>
      <logic_name>copy_table</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::MySQLTransfer</module>
      <parameters>
        <param>
          <param_name>filter_cmd</param_name>
          <param_value>sed &quot;s/ENGINE=MyISAM/ENGINE=InnoDB/&quot;</param_value>
        </param>
        <param>
          <param_name>mode</param_name>
          <param_value>overwrite</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>innodbise_table</target>
        </flow>
      </flow_rules>
      <logic_name>innodbise_table_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::JobFactory</module>
      <parameters>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>inputquery</param_name>
          <param_value>SELECT table_name FROM information_schema.tables WHERE table_schema =&quot;lg4_compara_homology_70&quot; AND table_name!=&quot;meta&quot; AND engine=&quot;MyISAM&quot; </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>100</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>-1</hive_capacity>
      <logic_name>innodbise_table</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::SqlCmd</module>
      <parameters>
        <param>
          <param_name>sql</param_name>
          <param_value>ALTER TABLE #table_name# ENGINE=InnoDB</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <target>load_genomedb_factory</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>prepare_species_sets</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::SqlCmd</module>
      <parameters>
        <param>
          <param_name>sql</param_name>
          <param_value>
            <array>
              <array_item>INSERT INTO species_set VALUES ()</array_item>
              <array_item>DELETE FROM species_set WHERE species_set_id=#_insert_id_0#</array_item>
              <array_item>INSERT INTO meta (meta_key,meta_value) VALUES (&quot;reuse_ss_id&quot;, #_insert_id_0#)</array_item>
              <array_item>INSERT INTO species_set VALUES ()</array_item>
              <array_item>DELETE FROM species_set WHERE species_set_id=#_insert_id_3#</array_item>
              <array_item>INSERT INTO meta (meta_key,meta_value) VALUES (&quot;nonreuse_ss_id&quot;, #_insert_id_3#)</array_item>
            </array>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <branch>2</branch>
              <target>load_genomedb</target>
            </flow>
          </dependent>
          <target>finish_species_sets</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>load_genomedb_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ObjectFactory</module>
      <parameters>
        <param>
          <param_name>compara_db</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>-user</hash_key>
                <hash_value>ensro</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-host</hash_key>
                <hash_value>compara1</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-dbname</hash_key>
                <hash_value>sf5_ensembl_compara_master</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-port</hash_key>
                <hash_value>3306</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-pass</hash_key>
                <hash_value></hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>call_list</param_name>
          <param_value>
            <array>
              <array_item>compara_dba</array_item>
              <array_item>get_MethodLinkSpeciesSetAdaptor</array_item>
              <array_item>
                <array>
                  <array_item>fetch_by_dbID</array_item>
                  <array_item>#mlss_id#</array_item>
                </array>
              </array_item>
              <array_item>species_set_obj</array_item>
              <array_item>genome_dbs</array_item>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>column_names2getters</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>species_name</hash_key>
                <hash_value>name</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>locator</hash_key>
                <hash_value>locator</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>genebuild</hash_key>
                <hash_value>genebuild</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>assembly_name</hash_key>
                <hash_value>assembly</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>genome_db_id</hash_key>
                <hash_value>dbID</hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>500</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <target>check_reusability</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>load_genomedb</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::LoadOneGenomeDB</module>
      <parameters>
        <param>
          <param_name>registry_dbs</param_name>
          <param_value>
            <array>
              <array_item>
                <hash>
                  <hash_pair>
                    <hash_key>-user</hash_key>
                    <hash_value>ensro</hash_value>
                  </hash_pair>
                  <hash_pair>
                    <hash_key>-host</hash_key>
                    <hash_value>ens-staging</hash_value>
                  </hash_pair>
                  <hash_pair>
                    <hash_key>-port</hash_key>
                    <hash_value>3306</hash_value>
                  </hash_pair>
                  <hash_pair>
                    <hash_key>-pass</hash_key>
                    <hash_value></hash_value>
                  </hash_pair>
                </hash>
              </array_item>
              <array_item>
                <hash>
                  <hash_pair>
                    <hash_key>-user</hash_key>
                    <hash_value>ensro</hash_value>
                  </hash_pair>
                  <hash_pair>
                    <hash_key>-host</hash_key>
                    <hash_value>ens-staging2</hash_value>
                  </hash_pair>
                  <hash_pair>
                    <hash_key>-port</hash_key>
                    <hash_value>3306</hash_value>
                  </hash_pair>
                  <hash_pair>
                    <hash_key>-pass</hash_key>
                    <hash_value></hash_value>
                  </hash_pair>
                </hash>
              </array_item>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>db_version</param_name>
          <param_value>70</param_value>
        </param>
        <param>
          <param_name>registry_files</param_name>
          <param_value>
            <array>
            </array>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>3</branch>
          <target>mysql:////species_set</target>
          <template>
            <hash>
              <hash_pair>
                <hash_key>species_set_id</hash_key>
                <hash_value>#nonreuse_ss_id#</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>genome_db_id</hash_key>
                <hash_value>#genome_db_id#</hash_value>
              </hash_pair>
            </hash>
          </template>
        </flow>
        <flow>
          <branch>2</branch>
          <target>mysql:////species_set</target>
          <template>
            <hash>
              <hash_pair>
                <hash_key>species_set_id</hash_key>
                <hash_value>#reuse_ss_id#</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>genome_db_id</hash_key>
                <hash_value>#genome_db_id#</hash_value>
              </hash_pair>
            </hash>
          </template>
        </flow>
      </flow_rules>
      <hive_capacity>10</hive_capacity>
      <logic_name>check_reusability</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::CheckGenomedbReusability</module>
      <parameters>
        <param>
          <param_name>registry_dbs</param_name>
          <param_value>
            <array>
              <array_item>
                <hash>
                  <hash_pair>
                    <hash_key>-user</hash_key>
                    <hash_value>ensro</hash_value>
                  </hash_pair>
                  <hash_pair>
                    <hash_key>-host</hash_key>
                    <hash_value>ens-livemirror</hash_value>
                  </hash_pair>
                  <hash_pair>
                    <hash_key>-port</hash_key>
                    <hash_value>3306</hash_value>
                  </hash_pair>
                  <hash_pair>
                    <hash_key>-pass</hash_key>
                    <hash_value></hash_value>
                  </hash_pair>
                </hash>
              </array_item>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>prev_release</param_name>
          <param_value>0</param_value>
        </param>
        <param>
          <param_name>do_not_reuse_list</param_name>
          <param_value>
            <array>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>release</param_name>
          <param_value>70</param_value>
        </param>
        <param>
          <param_name>reuse_db</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>-user</hash_key>
                <hash_value>ensro</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-host</hash_key>
                <hash_value>compara3</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-dbname</hash_key>
                <hash_value>sf5_ensembl_compara_69</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-port</hash_key>
                <hash_value>3306</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-pass</hash_key>
                <hash_value></hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>500Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <target>make_species_tree</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>finish_species_sets</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::SqlCmd</module>
      <parameters>
        <param>
          <param_name>sql</param_name>
          <param_value>
            <array>
              <array_item>CREATE TEMPORARY TABLE tmp_ss SELECT species_set_id FROM species_set LEFT JOIN genome_db USING (genome_db_id) GROUP BY species_set_id HAVING COUNT(*) != COUNT(genome_db.genome_db_id)</array_item>
              <array_item>DELETE method_link_species_set FROM method_link_species_set JOIN tmp_ss USING (species_set_id)</array_item>
              <array_item>DELETE species_set FROM species_set JOIN tmp_ss USING (species_set_id)</array_item>
              <array_item>INSERT INTO meta (meta_key,meta_value) SELECT &quot;reuse_ss_csv&quot;, IFNULL(GROUP_CONCAT(genome_db_id), &quot;-1&quot;) FROM species_set WHERE species_set_id=#reuse_ss_id#</array_item>
              <array_item>INSERT INTO meta (meta_key,meta_value) SELECT &quot;nonreuse_ss_csv&quot;, IFNULL(GROUP_CONCAT(genome_db_id), &quot;-1&quot;) FROM species_set WHERE species_set_id=#nonreuse_ss_id#</array_item>
              <array_item>ALTER TABLE member ADD KEY gene_list_index (source_name, taxon_id, chr_name, chr_strand, chr_start)</array_item>
            </array>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>3</branch>
          <target>mysql:////method_link_species_set_tag</target>
          <template>
            <hash>
              <hash_pair>
                <hash_key>value</hash_key>
                <hash_value>#species_tree_string#</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>tag</hash_key>
                <hash_value>species_tree</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>method_link_species_set_id</hash_key>
                <hash_value>#mlss_id#</hash_value>
              </hash_pair>
            </hash>
          </template>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>make_species_tree</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::MakeSpeciesTree</module>
      <parameters>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>species_tree_input_file</param_name>
          <param_value></param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <branch>2</branch>
              <target>sequence_table_reuse</target>
            </flow>
          </dependent>
          <target>genome_loadfresh_factory</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>genome_reuse_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::JobFactory</module>
      <parameters>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>inputquery</param_name>
          <param_value>SELECT genome_db_id, name FROM species_set JOIN genome_db USING (genome_db_id) WHERE species_set_id = #reuse_ss_id#</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <target>member_table_reuse</target>
        </flow>
        <flow>
          <branch>2</branch>
          <target>mysql:////sequence</target>
        </flow>
      </flow_rules>
      <hive_capacity>4</hive_capacity>
      <logic_name>sequence_table_reuse</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::JobFactory</module>
      <parameters>
        <param>
          <param_name>db_conn</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>-user</hash_key>
                <hash_value>ensro</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-host</hash_key>
                <hash_value>compara3</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-dbname</hash_key>
                <hash_value>sf5_ensembl_compara_69</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-port</hash_key>
                <hash_value>3306</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-pass</hash_key>
                <hash_value></hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>inputquery</param_name>
          <param_value>SELECT s.* FROM sequence s JOIN member USING (sequence_id) WHERE sequence_id&lt;=100000000 AND genome_db_id = #genome_db_id#</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>500Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <target>other_sequence_table_reuse</target>
        </flow>
      </flow_rules>
      <hive_capacity>4</hive_capacity>
      <logic_name>member_table_reuse</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::MySQLTransfer</module>
      <parameters>
        <param>
          <param_name>src_db_conn</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>-user</hash_key>
                <hash_value>ensro</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-host</hash_key>
                <hash_value>compara3</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-dbname</hash_key>
                <hash_value>sf5_ensembl_compara_69</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-port</hash_key>
                <hash_value>3306</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-pass</hash_key>
                <hash_value></hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
        <param>
          <param_name>mode</param_name>
          <param_value>insertignore</param_value>
        </param>
        <param>
          <param_name>table</param_name>
          <param_value>member</param_value>
        </param>
        <param>
          <param_name>where</param_name>
          <param_value>member_id&lt;=100000000 AND genome_db_id = #genome_db_id#</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>mysql:////other_member_sequence</target>
        </flow>
      </flow_rules>
      <hive_capacity>4</hive_capacity>
      <logic_name>other_sequence_table_reuse</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::JobFactory</module>
      <parameters>
        <param>
          <param_name>db_conn</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>-user</hash_key>
                <hash_value>ensro</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-host</hash_key>
                <hash_value>compara3</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-dbname</hash_key>
                <hash_value>sf5_ensembl_compara_69</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-port</hash_key>
                <hash_value>3306</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-pass</hash_key>
                <hash_value></hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>inputquery</param_name>
          <param_value>SELECT s.member_id, s.seq_type, s.length, s.sequence FROM other_member_sequence s JOIN member USING (member_id) WHERE genome_db_id = #genome_db_id# AND seq_type IN (&quot;cds&quot;, &quot;exon_bounded&quot;) AND member_id &lt;= 100000000</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>1Gb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>load_fresh_members</target>
        </flow>
        <flow>
          <target>genome_loadfresh_fromfile_factory</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>genome_loadfresh_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::JobFactory</module>
      <parameters>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>inputquery</param_name>
          <param_value>SELECT genome_db_id, name FROM species_set JOIN genome_db USING (genome_db_id) WHERE species_set_id = #nonreuse_ss_id# AND locator LIKE &quot;Bio::EnsEMBL::DBSQL::DBAdaptor/%&quot;</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>load_fresh_members_fromfile</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>genome_loadfresh_fromfile_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::JobFactory</module>
      <parameters>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>inputquery</param_name>
          <param_value>SELECT genome_db_id, name FROM species_set JOIN genome_db USING (genome_db_id) WHERE species_set_id = #nonreuse_ss_id# AND locator NOT LIKE &quot;Bio::EnsEMBL::DBSQL::DBAdaptor/%&quot;</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>-1</hive_capacity>
      <logic_name>load_fresh_members</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::LoadMembers</module>
      <parameters>
        <param>
          <param_name>store_related_pep_sequences</param_name>
          <param_value>1</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>2Gb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>-1</hive_capacity>
      <logic_name>load_fresh_members_fromfile</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::LoadMembersFromFiles</module>
      <parameters>
        <param>
          <param_name>-need_cds_seq</param_name>
          <param_value>1</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>2Gb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <target>paf_noreuse_factory</target>
            </flow>
            <flow>
              <branch>2</branch>
              <target>paf_table_reuse</target>
            </flow>
          </dependent>
          <target>blastdb_factory</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>paf_reuse_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::JobFactory</module>
      <parameters>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>inputquery</param_name>
          <param_value>SELECT genome_db_id, name FROM species_set JOIN genome_db USING (genome_db_id) WHERE species_set_id = #reuse_ss_id#</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>paf_create_empty_table</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>paf_noreuse_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::JobFactory</module>
      <parameters>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>inputquery</param_name>
          <param_value>SELECT genome_db_id, name FROM species_set JOIN genome_db USING (genome_db_id) WHERE species_set_id = #nonreuse_ss_id#</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>4</hive_capacity>
      <logic_name>paf_table_reuse</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::MySQLTransfer</module>
      <parameters>
        <param>
          <param_name>src_db_conn</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>-user</hash_key>
                <hash_value>ensro</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-host</hash_key>
                <hash_value>compara3</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-dbname</hash_key>
                <hash_value>sf5_ensembl_compara_69</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-port</hash_key>
                <hash_value>3306</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-pass</hash_key>
                <hash_value></hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
        <param>
          <param_name>filter_cmd</param_name>
          <param_value>sed &quot;s/ENGINE=MyISAM/ENGINE=InnoDB/&quot;</param_value>
        </param>
        <param>
          <param_name>table</param_name>
          <param_value>peptide_align_feature_#name#_#genome_db_id#</param_value>
        </param>
        <param>
          <param_name>where</param_name>
          <param_value>hgenome_db_id IN (#reuse_ss_csv#)</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>100</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>-1</hive_capacity>
      <logic_name>paf_create_empty_table</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::SqlCmd</module>
      <parameters>
        <param>
          <param_name>sql</param_name>
          <param_value>
            <array>
              <array_item>CREATE TABLE IF NOT EXISTS peptide_align_feature_#name#_#genome_db_id# LIKE peptide_align_feature</array_item>
              <array_item>ALTER TABLE peptide_align_feature_#name#_#genome_db_id# DISABLE KEYS</array_item>
            </array>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <branch>2</branch>
              <target>dump_subset_create_blastdb</target>
            </flow>
          </dependent>
          <target>blast_species_factory</target>
        </flow>
      </flow_rules>
      <logic_name>blastdb_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ObjectFactory</module>
      <parameters>
        <param>
          <param_name>call_list</param_name>
          <param_value>
            <array>
              <array_item>compara_dba</array_item>
              <array_item>get_GenomeDBAdaptor</array_item>
              <array_item>fetch_all</array_item>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>column_names2getters</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>genome_db_id</hash_key>
                <hash_value>dbID</hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>250Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>20</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>-1</hive_capacity>
      <logic_name>dump_subset_create_blastdb</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::DumpSubsetCreateBlastDB</module>
      <parameters>
        <param>
          <param_name>fasta_dir</param_name>
          <param_value>/lustre/scratch109/ensembl/lg4/protein_trees_70/blast_db</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>blast_factory</target>
        </flow>
      </flow_rules>
      <logic_name>blast_species_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ObjectFactory</module>
      <parameters>
        <param>
          <param_name>call_list</param_name>
          <param_value>
            <array>
              <array_item>compara_dba</array_item>
              <array_item>get_GenomeDBAdaptor</array_item>
              <array_item>fetch_all</array_item>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>column_names2getters</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>genome_db_id</hash_key>
                <hash_value>dbID</hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>blastp_with_reuse</target>
        </flow>
      </flow_rules>
      <hive_capacity>50</hive_capacity>
      <logic_name>blast_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::JobFactory</module>
      <parameters>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>inputquery</param_name>
          <param_value>SELECT canonical_member_id AS member_id FROM member WHERE genome_db_id = #genome_db_id# AND canonical_member_id IS NOT NULL</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>40</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>900</hive_capacity>
      <logic_name>blastp_with_reuse</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::BlastpWithReuse</module>
      <parameters>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>wublastp_exe</param_name>
          <param_value>/usr/local/ensembl/bin/wublastp</param_value>
        </param>
        <param>
          <param_name>blast_options</param_name>
          <param_value>-filter none -span1 -postsw -V=20 -B=20 -sort_by_highscore -warnings -cpus 1</param_value>
        </param>
        <param>
          <param_name>blast_tmp_dir</param_name>
          <param_value></param_value>
        </param>
        <param>
          <param_name>reuse_db</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>-user</hash_key>
                <hash_value>ensro</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-host</hash_key>
                <hash_value>compara3</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-dbname</hash_key>
                <hash_value>sf5_ensembl_compara_69</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-port</hash_key>
                <hash_value>3306</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-pass</hash_key>
                <hash_value></hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
        <param>
          <param_name>fasta_dir</param_name>
          <param_value>/lustre/scratch109/ensembl/lg4/protein_trees_70/blast_db</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>250Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <branch>2</branch>
              <target>hcluster_dump_input_per_genome</target>
            </flow>
          </dependent>
          <target>hcluster_merge_factory</target>
        </flow>
      </flow_rules>
      <logic_name>hcluster_dump_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ObjectFactory</module>
      <parameters>
        <param>
          <param_name>call_list</param_name>
          <param_value>
            <array>
              <array_item>compara_dba</array_item>
              <array_item>get_GenomeDBAdaptor</array_item>
              <array_item>fetch_all</array_item>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>column_names2getters</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>genome_db_id</hash_key>
                <hash_value>dbID</hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>4</hive_capacity>
      <logic_name>hcluster_dump_input_per_genome</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::HclusterPrepare</module>
      <parameters>
        <param>
          <param_name>cluster_dir</param_name>
          <param_value>/lustre/scratch109/ensembl/lg4/protein_trees_70/cluster</param_value>
        </param>
        <param>
          <param_name>outgroups</param_name>
          <param_value>
            <array>
              <array_item>127</array_item>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <target>hcluster_merge_inputs</target>
              <template>
                <hash>
                  <hash_pair>
                    <hash_key>ext</hash_key>
                    <hash_value>cat</hash_value>
                  </hash_pair>
                </hash>
              </template>
            </flow>
            <flow>
              <target>hcluster_merge_inputs</target>
              <template>
                <hash>
                  <hash_pair>
                    <hash_key>ext</hash_key>
                    <hash_value>txt</hash_value>
                  </hash_pair>
                </hash>
              </template>
            </flow>
          </dependent>
          <target>hcluster_run</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>hcluster_merge_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::Dummy</module>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>-1</hive_capacity>
      <logic_name>hcluster_merge_inputs</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::SystemCmd</module>
      <parameters>
        <param>
          <param_name>cluster_dir</param_name>
          <param_value>/lustre/scratch109/ensembl/lg4/protein_trees_70/cluster</param_value>
        </param>
        <param>
          <param_name>cmd</param_name>
          <param_value>cat #cluster_dir#/*.hcluster.#ext# &gt; #cluster_dir#/hcluster.#ext#</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <target>hcluster_parse_output</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>hcluster_run</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::SystemCmd</module>
      <parameters>
        <param>
          <param_name>cluster_dir</param_name>
          <param_value>/lustre/scratch109/ensembl/lg4/protein_trees_70/cluster</param_value>
        </param>
        <param>
          <param_name>cmd</param_name>
          <param_value>#hcluster_exe# -m #clustering_max_gene_halfcount# -w 0 -s 0.34 -O -C #cluster_dir#/hcluster.cat -o #cluster_dir#/hcluster.out #cluster_dir#/hcluster.txt</param_value>
        </param>
        <param>
          <param_name>clustering_max_gene_halfcount</param_name>
          <param_value>750</param_value>
        </param>
        <param>
          <param_name>hcluster_exe</param_name>
          <param_value>/software/ensembl/compara/hcluster/hcluster_sg</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>urgent_hcluster</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <target>run_qc_tests</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>hcluster_parse_output</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::HclusterParseOutput</module>
      <parameters>
        <param>
          <param_name>cluster_dir</param_name>
          <param_value>/lustre/scratch109/ensembl/lg4/protein_trees_70/cluster</param_value>
        </param>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>additional_clustersets</param_name>
          <param_value>
            <array>
              <array_item>phyml-aa</array_item>
              <array_item>phyml-nt</array_item>
              <array_item>nj-dn</array_item>
              <array_item>nj-ds</array_item>
              <array_item>nj-mm</array_item>
            </array>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>2Gb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <target>overall_qc</target>
        </flow>
        <flow>
          <branch>2</branch>
          <target>per_genome_qc</target>
        </flow>
      </flow_rules>
      <logic_name>run_qc_tests</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ObjectFactory</module>
      <parameters>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>call_list</param_name>
          <param_value>
            <array>
              <array_item>compara_dba</array_item>
              <array_item>get_GenomeDBAdaptor</array_item>
              <array_item>fetch_all</array_item>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>input_id</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>genome_db_id</hash_key>
                <hash_value>#genome_db_id#</hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
        <param>
          <param_name>column_names2getters</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>genome_db_id</hash_key>
                <hash_value>dbID</hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>4</hive_capacity>
      <logic_name>overall_qc</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::OverallGroupsetQC</module>
      <parameters>
        <param>
          <param_name>cluster_dir</param_name>
          <param_value>/lustre/scratch109/ensembl/lg4/protein_trees_70/cluster</param_value>
        </param>
        <param>
          <param_name>reuse_db</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>-user</hash_key>
                <hash_value>ensro</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-host</hash_key>
                <hash_value>compara3</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-dbname</hash_key>
                <hash_value>sf5_ensembl_compara_69</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-port</hash_key>
                <hash_value>3306</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-pass</hash_key>
                <hash_value></hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>1Gb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>4</hive_capacity>
      <logic_name>per_genome_qc</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::PerGenomeGroupsetQC</module>
      <parameters>
        <param>
          <param_name>reuse_db</param_name>
          <param_value>
            <hash>
              <hash_pair>
                <hash_key>-user</hash_key>
                <hash_value>ensro</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-host</hash_key>
                <hash_value>compara3</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-dbname</hash_key>
                <hash_value>sf5_ensembl_compara_69</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-port</hash_key>
                <hash_value>3306</hash_value>
              </hash_pair>
              <hash_pair>
                <hash_key>-pass</hash_key>
                <hash_value></hash_value>
              </hash_pair>
            </hash>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>msa_chooser</target>
        </flow>
      </flow_rules>
      <logic_name>cluster_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Hive::RunnableDB::JobFactory</module>
      <parameters>
        <param>
          <param_name>fan_branch_code</param_name>
          <param_value>2</param_value>
        </param>
        <param>
          <param_name>inputquery</param_name>
          <param_value>SELECT root_id AS gene_tree_id FROM gene_tree_root JOIN gene_tree_node USING (root_id) WHERE tree_type = &quot;tree&quot; GROUP BY root_id ORDER BY COUNT(*) DESC, root_id ASC</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1000</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>5</branch>
          <dependent>
            <flow>
              <branch>4</branch>
              <target>mafft</target>
            </flow>
          </dependent>
          <target>quick_tree_break</target>
        </flow>
        <flow>
          <dependent>
            <flow>
              <branch>2</branch>
              <target>mcoffee</target>
            </flow>
            <flow>
              <branch>3</branch>
              <target>mafft</target>
            </flow>
          </dependent>
          <target>split_genes</target>
        </flow>
      </flow_rules>
      <hive_capacity>500</hive_capacity>
      <logic_name>msa_chooser</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::MSAChooser</module>
      <parameters>
        <param>
          <param_name>mafft_runtime</param_name>
          <param_value>7200</param_value>
        </param>
        <param>
          <param_name>mafft_gene_count</param_name>
          <param_value>200</param_value>
        </param>
        <param>
          <param_name>treebreak_gene_count</param_name>
          <param_value>400</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>500Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>-1</branch>
          <target>mcoffee_himem</target>
        </flow>
        <flow>
          <branch>-2</branch>
          <target>mafft</target>
        </flow>
      </flow_rules>
      <hive_capacity>600</hive_capacity>
      <logic_name>mcoffee</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::MCoffee</module>
      <parameters>
        <param>
          <param_name>use_exon_boundaries</param_name>
          <param_value>0</param_value>
        </param>
        <param>
          <param_name>mcoffee_exe</param_name>
          <param_value>/software/ensembl/compara/tcoffee-7.86b/t_coffee</param_value>
        </param>
        <param>
          <param_name>method</param_name>
          <param_value>cmcoffee</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>msa</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>-1</branch>
          <target>mafft_himem</target>
        </flow>
      </flow_rules>
      <hive_capacity>600</hive_capacity>
      <logic_name>mafft</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::Mafft</module>
      <parameters>
        <param>
          <param_name>use_exon_boundaries</param_name>
          <param_value>0</param_value>
        </param>
        <param>
          <param_name>mafft_exe</param_name>
          <param_value>/software/ensembl/compara/mafft-6.707/bin/mafft</param_value>
        </param>
        <param>
          <param_name>mafft_binaries</param_name>
          <param_value>/software/ensembl/compara/mafft-6.707/binaries</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>msa</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>-2</branch>
          <target>mafft_himem</target>
        </flow>
      </flow_rules>
      <hive_capacity>600</hive_capacity>
      <logic_name>mcoffee_himem</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::MCoffee</module>
      <parameters>
        <param>
          <param_name>use_exon_boundaries</param_name>
          <param_value>0</param_value>
        </param>
        <param>
          <param_name>mcoffee_exe</param_name>
          <param_value>/software/ensembl/compara/tcoffee-7.86b/t_coffee</param_value>
        </param>
        <param>
          <param_name>method</param_name>
          <param_value>cmcoffee</param_value>
        </param>
        <param>
          <param_name>escape_branch</param_name>
          <param_value>-2</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>msa_himem</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>600</hive_capacity>
      <logic_name>mafft_himem</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::Mafft</module>
      <parameters>
        <param>
          <param_name>use_exon_boundaries</param_name>
          <param_value>0</param_value>
        </param>
        <param>
          <param_name>mafft_exe</param_name>
          <param_value>/software/ensembl/compara/mafft-6.707/bin/mafft</param_value>
        </param>
        <param>
          <param_name>mafft_binaries</param_name>
          <param_value>/software/ensembl/compara/mafft-6.707/binaries</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>msa_himem</rc_name>
    </analysis>
    <analysis>
      <batch_size>20</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <target>njtree_phyml</target>
        </flow>
      </flow_rules>
      <hive_capacity>600</hive_capacity>
      <logic_name>split_genes</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::FindContiguousSplitGenes</module>
      <priority>0</priority>
      <rc_name>250Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>ortho_tree_annot</target>
        </flow>
        <flow>
          <target>build_HMM_cds</target>
        </flow>
        <flow>
          <target>ortho_tree</target>
        </flow>
        <flow>
          <target>ktreedist</target>
        </flow>
        <flow>
          <target>build_HMM_aa</target>
        </flow>
      </flow_rules>
      <hive_capacity>400</hive_capacity>
      <logic_name>njtree_phyml</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::NJTREE_PHYML</module>
      <parameters>
        <param>
          <param_name>treebest_exe</param_name>
          <param_value>/software/ensembl/compara/treebest.doubletracking</param_value>
        </param>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>store_intermediate_trees</param_name>
          <param_value>1</param_value>
        </param>
        <param>
          <param_name>cdna</param_name>
          <param_value>1</param_value>
        </param>
        <param>
          <param_name>store_filtered_align</param_name>
          <param_value>1</param_value>
        </param>
        <param>
          <param_name>bootstrap</param_name>
          <param_value>1</param_value>
        </param>
        <param>
          <param_name>use_genomedb_id</param_name>
          <param_value>0</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>2Gb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>200</hive_capacity>
      <logic_name>ortho_tree</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::GeneTrees::OrthoTree</module>
      <parameters>
        <param>
          <param_name>tag_split_genes</param_name>
          <param_value>1</param_value>
        </param>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>use_genomedb_id</param_name>
          <param_value>0</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>500Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>-1</hive_capacity>
      <logic_name>ktreedist</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::GeneTrees::Ktreedist</module>
      <parameters>
        <param>
          <param_name>treebest_exe</param_name>
          <param_value>/software/ensembl/compara/treebest.doubletracking</param_value>
        </param>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>ktreedist_exe</param_name>
          <param_value>/software/ensembl/compara/ktreedist/Ktreedist.pl</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>1Gb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>300</hive_capacity>
      <logic_name>ortho_tree_annot</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::GeneTrees::OrthoTree</module>
      <parameters>
        <param>
          <param_name>store_homologies</param_name>
          <param_value>0</param_value>
        </param>
        <param>
          <param_name>tag_split_genes</param_name>
          <param_value>1</param_value>
        </param>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>use_genomedb_id</param_name>
          <param_value>0</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>500Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>10</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>200</hive_capacity>
      <logic_name>build_HMM_aa</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::BuildHMM</module>
      <parameters>
        <param>
          <param_name>sreformat_exe</param_name>
          <param_value>/usr/local/ensembl/bin/sreformat</param_value>
        </param>
        <param>
          <param_name>buildhmm_exe</param_name>
          <param_value>/software/ensembl/compara/hmmer3/hmmer-3.0/src/hmmbuild</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>250Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>10</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>200</hive_capacity>
      <logic_name>build_HMM_cds</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::BuildHMM</module>
      <parameters>
        <param>
          <param_name>sreformat_exe</param_name>
          <param_value>/usr/local/ensembl/bin/sreformat</param_value>
        </param>
        <param>
          <param_name>buildhmm_exe</param_name>
          <param_value>/software/ensembl/compara/hmmer3/hmmer-3.0/src/hmmbuild</param_value>
        </param>
        <param>
          <param_name>cdna</param_name>
          <param_value>1</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>500Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <target>other_paralogs</target>
        </flow>
      </flow_rules>
      <hive_capacity>100</hive_capacity>
      <logic_name>quick_tree_break</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::GeneTrees::QuickTreeBreak</module>
      <parameters>
        <param>
          <param_name>sreformat_exe</param_name>
          <param_value>/usr/local/ensembl/bin/sreformat</param_value>
        </param>
        <param>
          <param_name>quicktree_exe</param_name>
          <param_value>/software/ensembl/compara/quicktree_1.1/bin/quicktree</param_value>
        </param>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>treebreak_gene_count</param_name>
          <param_value>400</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>1Gb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <dependent>
            <flow>
              <branch>2</branch>
              <target>mafft</target>
            </flow>
          </dependent>
          <target>split_genes</target>
        </flow>
      </flow_rules>
      <hive_capacity>100</hive_capacity>
      <logic_name>other_paralogs</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::GeneTrees::OtherParalogs</module>
      <parameters>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>use_genomedb_id</param_name>
          <param_value>0</param_value>
        </param>
        <param>
          <param_name>dataflow_subclusters</param_name>
          <param_value>1</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>250Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>mlss_factory</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>group_genomes_under_taxa</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::GroupGenomesUnderTaxa</module>
      <parameters>
        <param>
          <param_name>taxlevels</param_name>
          <param_value>
            <array>
              <array_item>Theria</array_item>
              <array_item>Sauria</array_item>
              <array_item>Tetraodontiformes</array_item>
            </array>
          </param_value>
        </param>
        <param>
          <param_name>mlss_id</param_name>
          <param_value>12345</param_value>
        </param>
        <param>
          <param_name>filter_high_coverage</param_name>
          <param_value>1</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <branch>2</branch>
          <target>homology_factory</target>
        </flow>
      </flow_rules>
      <hive_capacity>-1</hive_capacity>
      <logic_name>mlss_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::MLSSIDFactory</module>
      <parameters>
        <param>
          <param_name>method_link_types</param_name>
          <param_value>
            <array>
              <array_item>ENSEMBL_ORTHOLOGUES</array_item>
              <array_item>ENSEMBL_PARALOGUES</array_item>
            </array>
          </param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <flow_rules>
        <flow>
          <dependent>
            <flow>
              <branch>2</branch>
              <target>homology_dNdS</target>
            </flow>
          </dependent>
          <target>threshold_on_dS</target>
        </flow>
      </flow_rules>
      <hive_capacity>200</hive_capacity>
      <logic_name>homology_factory</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::HomologyGroupingFactory</module>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>2</failed_job_tolerance>
      <hive_capacity>200</hive_capacity>
      <logic_name>homology_dNdS</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::Homology_dNdS</module>
      <parameters>
        <param>
          <param_name>codeml_exe</param_name>
          <param_value>/usr/local/ensembl/bin/codeml</param_value>
        </param>
        <param>
          <param_name>codeml_parameters_file</param_name>
          <param_value>/Users/lg4/work/ensembl-compara/scripts/pipeline/protein_trees.codeml.ctl.hash</param_value>
        </param>
      </parameters>
      <priority>0</priority>
      <rc_name>500Mb_job</rc_name>
    </analysis>
    <analysis>
      <batch_size>1</batch_size>
      <can_be_empty>0</can_be_empty>
      <failed_job_tolerance>0</failed_job_tolerance>
      <hive_capacity>200</hive_capacity>
      <logic_name>threshold_on_dS</logic_name>
      <max_retry_count>3</max_retry_count>
      <module>Bio::EnsEMBL::Compara::RunnableDB::ProteinTrees::Threshold_on_dS</module>
      <priority>0</priority>
      <rc_name>default</rc_name>
    </analysis>
  </pipeline_analyses>
  <pipeline_parameters>
    <param>
      <param_name>schema_type</param_name>
      <param_value>compara</param_value>
    </param>
    <param>
      <param_name>pipeline_name</param_name>
      <param_value>PT_70</param_value>
    </param>
    <param>
      <param_name>schema_version</param_name>
      <param_value>70</param_value>
    </param>
  </pipeline_parameters>
  <resource_mapping>
    <meadow>
      <meadow_type>LSF</meadow_type>
      <resources>
        <resource>
          <resource_name>urgent_hcluster</resource_name>
          <resource_string>-C0 -M32000000 -R&quot;select[mem&gt;32000] rusage[mem=32000]&quot; -q yesterday</resource_string>
        </resource>
        <resource>
          <resource_name>8Gb_job</resource_name>
          <resource_string>-C0 -M8000000  -R&quot;select[mem&gt;8000]  rusage[mem=8000]&quot;</resource_string>
        </resource>
        <resource>
          <resource_name>500Mb_job</resource_name>
          <resource_string>-C0 -M500000   -R&quot;select[mem&gt;500]   rusage[mem=500]&quot;</resource_string>
        </resource>
        <resource>
          <resource_name>250Mb_job</resource_name>
          <resource_string>-C0 -M250000   -R&quot;select[mem&gt;250]   rusage[mem=250]&quot;</resource_string>
        </resource>
        <resource>
          <resource_name>urgent</resource_name>
          <resource_string>-q yesterday</resource_string>
        </resource>
        <resource>
          <resource_name>msa_himem</resource_name>
          <resource_string>-C0 -M8000000  -R&quot;select[mem&gt;8000]  rusage[mem=8000]&quot;</resource_string>
        </resource>
        <resource>
          <resource_name>default</resource_name>
          <resource_string></resource_string>
        </resource>
        <resource>
          <resource_name>1Gb_job</resource_name>
          <resource_string>-C0 -M1000000  -R&quot;select[mem&gt;1000]  rusage[mem=1000]&quot;</resource_string>
        </resource>
        <resource>
          <resource_name>msa</resource_name>
          <resource_string>-C0 -M2000000  -R&quot;select[mem&gt;2000]  rusage[mem=2000]&quot;</resource_string>
        </resource>
        <resource>
          <resource_name>2Gb_job</resource_name>
          <resource_string>-C0 -M2000000  -R&quot;select[mem&gt;2000]  rusage[mem=2000]&quot;</resource_string>
        </resource>
      </resources>
    </meadow>
  </resource_mapping>
</pipeline>

