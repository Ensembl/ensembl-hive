

-- ---------------------------------------------------------------------------------------------------
-- Rename   all TIMESTAMP columns to have a 'when_' prefix for easier (and possibly automatic) identification.
-- Add      worker.when_seen TIMESTAMP
-- Fix      msg VIEW
-- ---------------------------------------------------------------------------------------------------

SET @expected_version = 63;

    -- make MySQL stop immediately after it encounters division by zero:
SET SESSION sql_mode='TRADITIONAL';

    -- warn that we detected the schema version mismatch:
SELECT CONCAT(  'The patch only applies to schema version ',
                @expected_version,
                ', but the current schema version is ',
                meta_value,
                ', so skipping the rest.') AS ''
    FROM hive_meta WHERE meta_key='hive_sql_schema_version' AND meta_value<>@expected_version;

    -- cause division by zero only if current version differs from the expected one:
INSERT INTO hive_meta (meta_key, meta_value)
    SELECT 'this_should_never_be_inserted', 1 FROM hive_meta WHERE NOT 1/(meta_key<>'hive_sql_schema_version' OR meta_value=@expected_version);

SELECT CONCAT(  'The patch seems to be compatible with schema version ',
                @expected_version,
                ', applying the patch...') AS '';

    -- Now undo the change so that we could patch potentially non-TRADITIONAL schema:
SET SESSION sql_mode='';


-- ----------------------------------<actual_patch> -------------------------------------------------

    -- First, rename all TIMESTAMPed columns to have a 'when_' prefix for automatic identification:
ALTER TABLE analysis_stats          CHANGE COLUMN last_update    when_updated            TIMESTAMP                    NULL;
ALTER TABLE job                     CHANGE COLUMN completed      when_completed          TIMESTAMP                    NULL;
ALTER TABLE worker                  CHANGE COLUMN born           when_born               TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE worker                  CHANGE COLUMN last_check_in  when_checked_in         TIMESTAMP                    NULL;
ALTER TABLE worker                  CHANGE COLUMN died           when_died               TIMESTAMP                    NULL;
ALTER TABLE log_message             CHANGE COLUMN time           when_logged             TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE analysis_stats_monitor  CHANGE COLUMN time           when_logged             TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE analysis_stats_monitor  CHANGE COLUMN last_update    when_updated            TIMESTAMP                    NULL;

    -- Then add one more column to register when a Worker was last seen by the Meadow:
ALTER TABLE worker                  ADD COLUMN                   when_seen               TIMESTAMP                    NULL AFTER when_checked_in;

    -- replace the 'msg' view as the columns implicitly referenced there have been renamed:
CREATE OR REPLACE VIEW msg AS
    SELECT a.analysis_id, a.logic_name, m.*
    FROM log_message m
    LEFT JOIN job j ON (j.job_id=m.job_id)
    LEFT JOIN analysis_base a ON (a.analysis_id=j.analysis_id);

-- ----------------------------------</actual_patch> -------------------------------------------------


    -- increase the schema version by one:
UPDATE hive_meta SET meta_value=meta_value+1 WHERE meta_key='hive_sql_schema_version';

