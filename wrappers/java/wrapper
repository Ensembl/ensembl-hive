#!/bin/bash
# Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute
# Copyright [2016-2019] EMBL-European Bioinformatics Institute
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


action=$1
module=$2
fd_in=$3
fd_out=$4
debug=$5

read -r -d '' usage << EOF
Usage:
        $0 build
        $0 check_exists module_name
        $0 run module_name fd_in fd_out debug
        $0 version
EOF


# change to java subdirectory
wrapper_dir=$(dirname "$0")
cd "$wrapper_dir"


# Find the JAR
jars=(target/eHive-*-jar-with-dependencies.jar)
if [ ${#jars[@]} -eq 0 ]
then
	echo "No JAR found. Run '$0 build' first"
	exit 1

elif [ ${#jars[@]} -gt 1 ]
then
	echo "More than 1 JAR file found: ${jars[*]}"
	exit 1
fi
jar=${jars[0]}
#echo "Using this JAR: '$jar'"


if [ "$action" == "build" ]; then
	rm -rf target
	exec mvn package

elif [ "$action" == "version" ]; then
	exec mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec

elif [ "$action" == "check_exists" ]; then
	if [[ -z "$module" ]]; then
		echo "Syntax error"
		echo "$usage"
		exit 1
	fi
	exec java -cp "$jar" --add-exports java.base/jdk.internal.access=ALL-UNNAMED org.ensembl.hive.CompileWrapper "$module"

elif [ "$action" == "run" ]; then
	if [[ -z "$module" || -z "$fd_in" || -z "$fd_out" || -z "$debug" ]]; then
		echo "Syntax error"
		echo "$usage"
		exit 1
	fi

	exec java -cp "$jar" --add-exports java.base/jdk.internal.access=ALL-UNNAMED org.ensembl.hive.RunWrapper "$module" "$fd_in" "$fd_out" "$debug"

else
	echo "Command-line error: No mode provided"
	echo "$usage"
	exit 1
fi
